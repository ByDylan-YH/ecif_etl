create database if not exists ${hiveconf:namespace};
drop table if exists ${hiveconf:namespace}.PTY_SRC_CUST_ID;
create external table ${hiveconf:namespace}.PTY_SRC_CUST_ID(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`cust_id` string,
`src_cust_id` string,
`cust_type_cd` string,
`src_cust_stat_cd` string,
`unknow_custom_flag` string,
`src_crt_dt` date,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:src_cust_id,
f:cust_type_cd,
f:src_cust_stat_cd,
f:unknow_custom_flag,
f:src_crt_dt,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_SRC_CUST_ID');



drop table if exists ${hiveconf:namespace}.PTY_BELONG_INFO;
create external table ${hiveconf:namespace}.PTY_BELONG_INFO(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`cust_id` string comment '客户编号',
`src_cust_id` string comment '源系统客户编号',
`group_id` string comment '群组编号',
`is_branch_flag` string comment '是否分公司标志',
`servicer_id` string comment '服务人编号',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`src_cust_status` string comment '源客户状态',
`src_sys` string comment '来源系统',
`data_crt_tm` string comment '数据创建时间',
`data_upd_tm` string comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:src_cust_id,
f:group_id,
f:is_branch_flag,
f:servicer_id,
f:last_merge_rowkey,
f:is_merge_flag,
f:src_cust_status,
f:src_sys,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_BELONG_INFO');


drop table if exists ${hiveconf:namespace}.PTY_CUST_FLG;
create external table ${hiveconf:namespace}.PTY_CUST_FLG(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`cust_id` string,
`fixed_cust_id` string,
`name` string,
`cert_type_cd` string,
`cert_no` string,
`cust_type_cd` string,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:fixed_cust_id,
f:name,
f:cert_type_cd,
f:cert_no,
f:cust_type_cd,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CUST_FLG');


drop table if exists ${hiveconf:namespace}.PTY_CUST_GROUP;
create external table ${hiveconf:namespace}.PTY_CUST_GROUP(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`cust_id` string,
`src_cust_id` string,
`group_id` string,
`src_sys` string,
`upd_sys` string,
`src_cust_status_bf` string,
`src_cust_status` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:src_cust_id,
f:group_id,
f:src_sys,
f:upd_sys,
f:src_cust_status_bf,
f:src_cust_status,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CUST_GROUP');


drop table if exists ${hiveconf:namespace}.EXT_PTY_INDV;
create external table ${hiveconf:namespace}.EXT_PTY_INDV(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cert_no` string comment '证件号码',
`cert_type_cd` string comment '证件类型',
`cn_name` string comment '中文名称',
`en_name` string comment '英文名称',
`name_py` string comment '拼音名称',
`used_name` string comment '曾用名称',
`birth_dt` date comment '出生日期',
`country` string comment '国家',
`province` string comment '省份',
`city` string comment '城市',
`ethnic` string comment '民族',
`prn_lng` string comment '父母语言',
`nationality` string comment '国籍',
`native_place` string comment '籍贯',
`residtype` string comment '居民类型代码',
`domc_lo` string comment '户籍地',
`gender` string comment '性别',
`bldtp` string comment '血型',
`cust_src` string comment '客户来源',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cert_no,
f:cert_type_cd,
f:cn_name,
f:en_name,
f:name_py,
f:used_name,
f:birth_dt,
f:country,
f:province,
f:city,
f:ethnic,
f:prn_lng,
f:nationality,
f:native_place,
f:residtype,
f:domc_lo,
f:gender,
f:bldtp,
f:cust_src,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_INDV');


drop table if exists ${hiveconf:namespace}.EXT_PTY_INDV_SUB;
create external table ${hiveconf:namespace}.EXT_PTY_INDV_SUB(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`lastname` string comment '姓',
`firstname` string comment '名',
`rlg_blf` string comment '宗教信仰',
`polit_face` string comment '政治面貌',
`height` string comment '身高',
`weight` int comment '体重',
`dead_dt` date comment '死亡日期',
`drvlics_type_cd` string comment '驾照类型代码',
`socseuy_flag` string comment '社保标志',
`idv_socseuy_id` string comment '个人社保编号',
`marr_stat_cd` string comment '婚姻状态代码',
`gb_stat_cd` string comment '生育状态代码',
`hlt_stat_cd` string comment '健康状态代码',
`fa_mem_cnt` int comment '家庭成员数目',
`is_have_child_flag` string comment '是否有子女标志',
`child_cnt` int comment '子女个数',
`is_have_vehic_flag` string comment '是否有车标志',
`live_situ` string comment '居住状况',
`is_local_estate_flag` string comment '是否本地房产标志',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:lastname,
f:firstname,
f:rlg_blf,
f:polit_face,
f:height,
f:weight,
f:dead_dt,
f:drvlics_type_cd,
f:socseuy_flag,
f:idv_socseuy_id,
f:marr_stat_cd,
f:gb_stat_cd,
f:hlt_stat_cd,
f:fa_mem_cnt,
f:is_have_child_flag,
f:child_cnt,
f:is_have_vehic_flag,
f:live_situ,
f:is_local_estate_flag,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_INDV_SUB');


drop table if exists ${hiveconf:namespace}.EXT_PTY_CORP;
create external table ${hiveconf:namespace}.EXT_PTY_CORP(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cust_type_cd` string comment '客户类型代码',
`org_inst_cd` string comment '组织机构代码',
`biz_license_no` string comment '营业执照号',
`un_soc_cr_cd` string comment '统一社会信用代码',
`cn_name` string comment '中文名称',
`his_name` string comment '曾用名',
`prd_name` string comment '产品名称',
`corp_type_cd` string comment '公司类型代码',
`oprt_stat_cd` string comment '经营状态代码',
`oprt_scope` string comment '经营范围',
`is_list_corp_flag` string comment '是否上市公司标志',
`is_statown_flag` string comment '是否国有标志',
`industry` string comment '行业',
`corp_tel` string comment '公司电话',
`lgl_represent` string comment '法人名称',
`lgl_cert_no` string comment '法人证件号码',
`lgl_cert_type_cd` string comment '法人证件类型代码',
`rgst_cap` decimal(26,6) comment '注册资本',
`rgst_dt` date comment '注册日期',
`corp_email` string comment '公司电子邮箱',
`act_con_name` string comment '实际控制人名称',
`act_con_cert_no` string comment '实际控制人证件号',
`act_con_cert_type_cd` string comment '实际控制人证件类型',
`rgst_addr` string comment '注册地址',
`cont_name` string comment '联系人名称',
`cont_tel` string comment '联系人电话',
`cust_src` string comment '客户来源',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间',
`is_merge_flag` string comment '是否合并标志',
`last_merge_rowkey` string comment '上一次合并前行键'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:org_inst_cd,
f:biz_license_no,
f:un_soc_cr_cd,
f:cn_name,
f:his_name,
f:prd_name,
f:corp_type_cd,
f:oprt_stat_cd,
f:oprt_scope,
f:is_list_corp_flag,
f:is_statown_flag,
f:industry,
f:corp_tel,
f:lgl_represent,
f:lgl_cert_no,
f:lgl_cert_type_cd,
f:rgst_cap,
f:rgst_dt,
f:corp_email,
f:act_con_name,
f:act_con_cert_no,
f:act_con_cert_type_cd,
f:rgst_addr,
f:cont_name,
f:cont_tel,
f:cust_src,
f:src_sys,
f:upd_sys,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm,
f:is_merge_flag,
f:last_merge_rowkey
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CORP');


drop table if exists ${hiveconf:namespace}.EXT_PTY_CORP_SUB;
create external table ${hiveconf:namespace}.EXT_PTY_CORP_SUB(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`cust_id` string comment '客户编号',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`pripid` string comment '主体身份代码',
`inv_name` string comment '投资人名称',
`inv_type_cd` string comment '投资人类型代码',
`inv_cert_type_cd` string comment '投资人证照类型代码',
`cert_type_cd` string comment '证件类型代码',
`subs_cap` decimal(18,6) comment '认缴资本金',
`paid_cap` decimal(18,7) comment '实缴资本金',
`fnd_dt` date comment '出资日期',
`s_ext_timestamp` date comment '数据更新时间',
`currency_cd` string comment '币种代码',
`src_sys` string comment '来源系统',
`is_busi_src_flag` string comment '业务系统标识',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:group_id,
f:src_cust_id,
f:pripid,
f:inv_name,
f:inv_type_cd,
f:inv_cert_type_cd,
f:cert_type_cd,
f:subs_cap,
f:paid_cap,
f:fnd_dt,
f:s_ext_timestamp,
f:currency_cd,
f:src_sys,
f:is_busi_src_flag,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CORP_SUB');


drop table if exists ${hiveconf:namespace}.EXT_PTY_CUST_INFO;
create external table ${hiveconf:namespace}.EXT_PTY_CUST_INFO(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`similar_id` string comment '相似组号',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`is_idcard_flag` string comment '合法身份证标志',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cn_name` string comment '中文名称',
`unknow_custom_flag` string comment '不明客户标志',
`cert_type_cd` string comment '证件类型代码',
`cert_no` string comment '证件号码',
`cert_valid_term` date comment '证件有效期',
`cert_effect_dt` date comment '证件有效开始日期',
`cert_end_dt` date comment '证件有效结束日期',
`issue_org` string comment '证件签发机关',
`cust_type_cd` string comment '客户类型代码',
`issue_dt` date comment '发证日期',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间',
`is_repair_flag` string  comment '已处理完成',
`repair_dt` date  comment '修复时间',
`src_cust_status` string  comment '源客户状态',
`issue_lvl` string comment '问题等级'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:similar_id,
f:last_merge_rowkey,
f:is_merge_flag,
f:is_idcard_flag,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cn_name,
f:unknow_custom_flag,
f:cert_type_cd,
f:cert_no,
f:cert_valid_term,
f:cert_effect_dt,
f:cert_end_dt,
f:issue_org,
f:cust_type_cd,
f:issue_dt,
f:src_sys,
f:upd_sys,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm,
f:is_repair_flag,
f:repair_dt,
f:src_cust_status,
f:issue_lvl
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CERT');


drop table if exists ${hiveconf:namespace}.EXT_PTY_TEL;
create external table ${hiveconf:namespace}.EXT_PTY_TEL(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cust_type_cd` string comment '客户类型代码',
`tel_type_cd` string comment '电话类型代码',
`country_no` string comment '国家号',
`tel_areacode` string comment '电话区号',
`tel_num` string comment '电话号码',
`tel_ext` string comment '电话分机',
`full_tel_num` string comment '完整电话号码',
`succ_contact_flag` string comment '成功接触标志',
`is_valid_flag` string comment '是否有效标志',
`main_tel_flag` string comment '主电话标志',
`operator_veri_flag` string comment '运营商校验标志',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:tel_type_cd,
f:country_no,
f:tel_areacode,
f:tel_num,
f:tel_ext,
f:full_tel_num,
f:succ_contact_flag,
f:is_valid_flag,
f:main_tel_flag,
f:operator_veri_flag,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_TEL');


drop table if exists ${hiveconf:namespace}.EXT_PTY_ADDR;
create external table ${hiveconf:namespace}.EXT_PTY_ADDR(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cust_type_cd` string comment '客户类型代码',
`addr_type_cd` string comment '地址类型代码',
`country` string comment '国家',
`province` string comment '省',
`city` string comment '市县',
`district` string comment '区镇',
`street` string comment '街道',
`building` string comment '建筑物',
`house_no` string comment '门牌号',
`room_no` string comment '房号',
`addr` string comment '地址',
`zip_code` string comment '邮政编码',
`valid_flag` string comment '有效标志',
`main_addr_flag` string comment '主地址标志',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:addr_type_cd,
f:country,
f:province,
f:city,
f:district,
f:street,
f:building,
f:house_no,
f:room_no,
f:addr,
f:zip_code,
f:valid_flag,
f:main_addr_flag,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_ADDR');


drop table if exists ${hiveconf:namespace}.EXT_PTY_NET_ADDR;
create external table ${hiveconf:namespace}.EXT_PTY_NET_ADDR(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`cust_type_cd` string comment '客户类型代码',
`net_addr_type_cd` string comment '互联网地址类型代码',
`net_addr_info` string comment '互联网地址信息',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:net_addr_type_cd,
f:net_addr_info,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_NET_ADDR');


drop table if exists ${hiveconf:namespace}.EXT_PTY_JOB;
create external table ${hiveconf:namespace}.EXT_PTY_JOB(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`employ_stat_cd` string comment '就业状态代码',
`industry` string comment '行业',
`pztion` string comment '职位',
`raks` string comment '职级',
`title` string comment '职称',
`job` string comment '职业',
`parttime_job` string comment '兼职职业',
`attend_work_dt` date comment '参加工作日期',
`expect_retire_age` int comment '期望退休年龄',
`unit_name` string comment '单位名称',
`dept` string comment '部门',
`emp_flag` string comment '员工标志',
`se_flag` string comment '高管标志',
`sharehd_flag` string comment '股东标志',
`fin_cont_flag` string comment '财务联系人标志',
`deci_flag` string comment '决策人标志',
`emp_type_flag` string comment '员工类别代码',
`is_prep_retire` string comment '待退休标志',
`quit_dt` date comment '离职日期',
`job_risk_lvl` string comment '职业风险等级',
`retire_dt` date comment '退休日期',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:employ_stat_cd,
f:industry,
f:pztion,
f:raks,
f:title,
f:job,
f:parttime_job,
f:attend_work_dt,
f:expect_retire_age,
f:unit_name,
f:dept,
f:emp_flag,
f:se_flag,
f:sharehd_flag,
f:fin_cont_flag,
f:deci_flag,
f:emp_type_flag,
f:is_prep_retire,
f:quit_dt,
f:job_risk_lvl,
f:retire_dt,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_JOB');


drop table if exists ${hiveconf:namespace}.EXT_PTY_EDU;
create external table ${hiveconf:namespace}.EXT_PTY_EDU(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`edu` string comment '学历',
`major` string comment '专业',
`college` string comment '院校',
`degree` string comment '学位',
`class_name` string comment '班级名称',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:edu,
f:major,
f:college,
f:degree,
f:class_name,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_EDU');


drop table if exists ${hiveconf:namespace}.EXT_PTY_PERFER;
create external table ${hiveconf:namespace}.EXT_PTY_PERFER(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源客户编号',
`cust_id` string comment '客户编号',
`prefer_cont_mode` string comment '偏好联系方式',
`work_cont_dt` date comment '工作联系日期',
`work_cont_tm` string comment '工作联系时间',
`unwork_cont_dt` date comment '非工作日联系日期',
`unwork_cont_tm` string comment '非工作日联系时间',
`pref_lng` string comment '偏好语言',
`hobby` string comment '爱好',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:prefer_cont_mode,
f:work_cont_dt,
f:work_cont_tm,
f:unwork_cont_dt,
f:unwork_cont_tm,
f:pref_lng,
f:hobby,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_PERFER');


drop table if exists ${hiveconf:namespace}.EXT_PTY_BANKACCT;
create external table ${hiveconf:namespace}.EXT_PTY_BANKACCT(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源客户编号',
`cust_id` string comment '客户编号',
`cust_type_cd` string comment '客户类型代码',
`bank_acct` string comment '银行账号',
`open_dt` date comment '开户日期',
`bank_cd` string comment '银行代码',
`bank_name` string comment '银行名称',
`acct_stat` string comment '账户状态',
`acct_usage` string comment '账户用途',
`currency_cd` string comment '币种代码',
`bank_acct_name` string comment '银行账户名称',
`acct_valid_dt` date comment '账户有效日期',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:bank_acct,
f:open_dt,
f:bank_cd,
f:bank_name,
f:acct_stat,
f:acct_usage,
f:currency_cd,
f:bank_acct_name,
f:acct_valid_dt,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_BANKACCT');


drop table if exists ${hiveconf:namespace}.EXT_PTY_INCOME_EXPNS;
create external table ${hiveconf:namespace}.EXT_PTY_INCOME_EXPNS(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`y_income` decimal(18,2) comment '年收入',
`m_income` decimal(18,2) comment '月收入',
`last_year_salary` decimal(18,2) comment '上个年度工资',
`currency_cd` string comment '币种代码',
`income_src` string comment '收入来源',
`mate_m_income` decimal(18,2) comment '配偶月收入',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:y_income,
f:m_income,
f:last_year_salary,
f:currency_cd,
f:income_src,
f:mate_m_income,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_INCOME_EXPNS');


drop table if exists ${hiveconf:namespace}.EXT_PTY_CONT;
create external table ${hiveconf:namespace}.EXT_PTY_CONT(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`rela_type_cd` string comment '关联人类型代码',
`rela_name` string comment '关联人名称',
`rela_phone_no` string comment '关联人手机号',
`rela_cert_type_cd` string comment '关联人证件类型代码',
`rela_cert_no` string comment '关联人证件号',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:rela_type_cd,
f:rela_name,
f:rela_phone_no,
f:rela_cert_type_cd,
f:rela_cert_no,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_CONT');


drop table if exists ${hiveconf:namespace}.EXT_REL_FAMILY_MEM;
create external table ${hiveconf:namespace}.EXT_REL_FAMILY_MEM(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`fam_id` string comment '家庭编号',
`mem_id` string comment '成员编号',
`role` string comment '角色',
`name` string comment '名称',
`cert_no` string comment '证件号码',
`cert_type_cd` string comment '证件类型代码',
`age` int comment '年龄',
`gender` string comment '性别',
`tel` string comment '电话号码',
`company` string comment '公司',
`cust_flag` string comment '客户标志',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:fam_id,
f:mem_id,
f:role,
f:name,
f:cert_no,
f:cert_type_cd,
f:age,
f:gender,
f:tel,
f:company,
f:cust_flag,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:REL_FAMILY_MEM');


drop table if exists ${hiveconf:namespace}.EXT_REL_CUST_ORG;
create external table ${hiveconf:namespace}.EXT_REL_CUST_ORG(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`group_id` string comment '群组编号',
`src_cust_id` string comment '源系统客户编号',
`cust_id` string comment '客户编号',
`org_id` string comment '机构编号',
`org_lvl_cd` string comment '机构级别代码',
`src_sys` string comment '来源系统',
`upd_sys` string comment '更新系统',
`last_merge_rowkey` string comment '上一次合并前行键',
`is_merge_flag` string comment '是否合并标志',
`data_crt_tm` timestamp comment '数据创建时间',
`data_upd_tm` timestamp comment '数据更新时间',
`etl_crt_tm` timestamp comment 'ETL创建时间',
`etl_upd_tm` timestamp comment 'ETL更新时间'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:org_id,
f:org_lvl_cd,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:REL_CUST_ORG');



drop table if exists ${hiveconf:namespace}.EXT_REL_PTY_ACC_FULL;
create external table ${hiveconf:namespace}.EXT_REL_PTY_ACC_FULL(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`acct_id` string,
`acct_stat_cd` string,
`open_dt` date,
`cancel_dt` date,
`bk_type_cd` string,
`acct_type_cd` string,
`acct_flag_cd` string,
`cust_type_cd` string,
`bank_no` string,
`currency_cd` string,
`C$1601$_futs_asset_acct` string,
`C$1601$_futs_bank_acct_flag` string,
`C$1601$_futs_bank_open_name` string,
`C$1601$_futs_bank_open_bank` string,
`C$1601$_futs_settle_acct_type_cd` string,
`B$1602$_futso_exchange_flag` string,
`B$1602$_futso_freezestatus` string,
`B$1603$_futsx_exchange_flag     ` string,
`C$1001$_tpd_asset_acct` string,
`C$1001$_tpd_bank_acct_type_cd` string,
`C$1001$_tpd_main_acct_flag` string,
`C$1001$_tpd_branch_no` string,
`C$1001$_tpd_cust_acct` string,
`C$1001$_tpd_holder_name` string,
`C$1001$_tpd_foreign_flag` string,
`C$1001$_tpd_cert_type_cd` string,
`C$1001$_tpd_cert_no` string,
`C$1001$_tpd_auth_no` int,
`C$1001$_tpd_out_amt_upper_limit` decimal(19,2),
`C$1001$_tpd_out_amt_lower_limit` decimal(19,2),
`C$1001$_tpd_in_amt_upper_limit` decimal(19,2),
`C$1001$_tpd_in_amt_lower_limit` decimal(19,2),
`C$1001$_tpd_con_tpl` int,
`C$1001$_tpd_bank_operator` string,
`C$1001$_tpd_bank_appt_flag` string,
`C$1001$_tpd_perm_entrust_mode` string,
`C$1001$_tpd_bank_acct_juri` string,
`C$1001$_tpd_bank_acct_lmt` string,
`C$1001$_tpd_bank_book_account` string,
`C$1001$_tpd_prov_branch_cd` string,
`C$1001$_tpd_city_branch_cd` string,
`C$1001$_tpd_county_branch_cd` string,
`C$1001$_tpd_sub_branch_cd` string,
`C$1001$_tpd_posit_str` string,
`C$1001$_tpd_remark` string,
`B$1002$_ord_acct_branch_no` string,
`B$1002$_ord_acct_fund_card` string,
`B$1002$_ord_acct_main_acct_flag` string,
`B$1002$_ord_acct_risk_level` int,
`B$1002$_ord_acct_risk_end_dt` date,
`B$1002$_ord_acct_inter_asset_acct` string,
`B$1002$_ord_acct_ust_grp` string,
`B$1002$_ord_acct_room_code` string,
`B$1002$_ord_acct_asset_prop` string,
`B$1002$_ord_acct_fare_type_str` string,
`B$1002$_ord_acct_dist_model` int,
`B$1002$_ord_acct_perm_entrust_mode` string,
`B$1002$_ord_acct_cust_rights` string,
`B$1002$_ord_acct_cust_restriction` string,
`B$1002$_ord_acct_profit_cal_mode` string,
`B$1002$_ord_acct_product_flag` string,
`B$1002$_ord_acct_limit_flag` int,
`B$1003$_mt_mt_asset_acct` string,
`B$1003$_mt_fi__quota` decimal(19,2),
`B$1003$_mt_ma_quota` decimal(19,2),
`B$1003$_mt_max_quota` decimal(19,2),
`B$1003$_mt_fi_rate` decimal(14,13),
`B$1003$_mt_fs_rate` decimal(14,13),
`B$1003$_mt_ctr_begin_dy` date,
`B$1003$_mt_ctr_end_date` date,
`B$1003$_mt_branch_no` string,
`B$1004$_iso_branch_no` string,
`B$1004$_iso_iso_asset_acct` string,
`B$1004$_iso_cust_opt_level` string,
`B$1004$_iso_right_hold_quota` decimal(19,2),
`B$1004$_iso_sh_pur_quota` decimal(19,2),
`B$1004$_iso_total_hold_quota` decimal(19,2),
`B$1004$_iso_lop_expire_date` date,
`B$1004$_iso_td_sum_buy_quota` decimal(19,2),
`B$1005$_bf_cft_acct` string,
`B$1005$_bf_prod_ta_no` string,
`B$1005$_bf_bf_acct` string,
`B$1005$_bf_branch_no` string,
`B$1005$_bf_cert_type_cd` string,
`B$1005$_bf_cert_no` string,
`B$1005$_bf_prod_acct_stat` string,
`B$1005$_bf_dividend_mode` string,
`B$1005$_bf_seat_no` string,
`B$1005$_bf_posi_str` string,
`B$1005$_bf_ta_risk_level` string,
`B$1005$_bf_risk_end_dt` date,
`B$1005$_bf_trans_acct` string,
`B$1005$_bf_operator_name` string,
`B$1005$_bf_agent_cert_type_cd` string,
`B$1005$_bf_agent_cert_no` string,
`B$1006$_sf_sf_asset_acct` string,
`B$1006$_sf_prod_ta_no` string,
`B$1006$_sf_sf_acct` string,
`B$1006$_sf_branch_no` string,
`B$1006$_sf_cert_type_cd` string,
`B$1006$_sf_cert_no` string,
`B$1006$_sf_prod_holder_stat` string,
`B$1006$_sf_dividend_mode` string,
`B$1006$_sf_remark` string,
`B$1006$_sf_seat_no` string,
`B$1006$_sf_export_dt` date,
`B$1006$_sf_posi_str` string,
`B$1006$_sf_prod_holder_type_cd` string,
`B$1006$_sf_trans_acct` string,
`B$1006$_sf_register_flag` string,
`B$1006$_sf_acct_right` string,
`B$1006$_sf_pay_acct` string,
`B$1006$_sf_pay_type_cd` string,
`B$1006$_sf_bank_cd` string,
`B$1007$_ord_acct_branch_no` string,
`B$1007$_ord_acct_fund_card` string,
`B$1007$_ord_acct_main_acct_flag` string,
`B$1007$_ord_acct_risk_level` int,
`B$1007$_ord_acct_risk_end_dt` date,
`B$1007$_ord_acct_inter_asset_acct` string,
`B$1007$_ord_acct_ust_grp` string,
`B$1007$_ord_acct_room_code` string,
`B$1007$_ord_acct_asset_prop` string,
`B$1007$_ord_acct_fare_type_str` string,
`B$1007$_ord_acct_dist_model` int,
`B$1007$_ord_acct_perm_entrust_mode` string,
`B$1007$_ord_acct_cust_rights` string,
`B$1007$_ord_acct_cust_restriction` string,
`B$1007$_ord_acct_profit_cal_mode` string,
`B$1007$_ord_acct_product_flag` string,
`B$1007$_ord_acct_limit_flag` int,
`B$1801$_scc_cust_group` string,
`B$1801$_scc_com_clf` string,
`B$1801$_scc_bk_clf` int,
`B$1801$_scc_acct_type_cd` string,
`B$1801$_scc_main_acct` string,
`B$1401$_tg_fund_acct_no` string,
`B$1401$_tg_prod_id` int,
`B$1401$_tg_prod_cd` string,
`B$1401$_tg_prod_sname` string,
`B$1401$_tg_fund_acct_type_cd` string,
`B$1401$_tg_prot_stat` string,
`B$1401$_tg_prot_est_dt` date,
`B$1701$_tas_seller_no` string,
`B$1701$_tas_dot_no` string,
`B$1701$_tas_trans_acct` string,
`B$1701$_tas_open_dot_flag` string,
`B$1701$_tas_acct_default_dividend_mode` string,
`B$1701$_tas_c_bank_name` string,
`B$1701$_tas_bank_acct` string,
`B$1701$_tas_bank_acct_name` string,
`B$1701$_tas_operation_dot_no` string,
`B$1701$_tas_trans_acct_bak` string,
`B$1701$_tas_special_acct_flag` string,
`B$1701$_tas_special_acct_id` string,
`B$1701$_tas_his_flag` string,
`B$1702$_tas_seller_no` string,
`B$1702$_tas_dot_no` string,
`B$1702$_tas_trans_acct` string,
`B$1702$_tas_trans_acct_stat` string,
`B$1702$_tas_acct_default_dividend_mode` string,
`B$1702$_tas_bank_name` string,
`B$1702$_tas_bank_acct` string,
`B$1702$_tas_bank_acct_name` string,
`B$1702$_tas_operation_dot_no` string,
`B$1702$_tas_trans_acct_bak` string,
`B$1703$ds_acct_card` string,
`B$1703$ds_acct_name` string,
`B$1703$ds_main_acct_flag` string,
`B$1099$_ord_acct_branch_no` string,
`B$1099$_ord_acct_fund_card` string,
`B$1099$_ord_acct_main_acct_flag` string,
`B$1099$_ord_acct_risk_level` int,
`B$1099$_ord_acct_risk_end_dt` date,
`B$1099$_ord_acct_inter_asset_acct` string,
`B$1099$_ord_acct_ust_grp` string,
`B$1099$_ord_acct_room_code` string,
`B$1099$_ord_acct_asset_prop` string,
`B$1099$_ord_acct_fare_type_str` string,
`B$1099$_ord_acct_dist_model` int,
`B$1099$_ord_acct_perm_entrust_mode` string,
`B$1099$_ord_acct_cust_rights` string,
`B$1099$_ord_acct_cust_restriction` string,
`B$1099$_ord_acct_profit_cal_mode` string,
`B$1099$_ord_acct_product_flag` string,
`B$1099$_ord_acct_limit_flag` int,
`B$1604$_greisen_sys_date`  string,
`B$1604$_greisen_fund_acct` string,
`B$1605$_greisen_sys_date`  string,
`B$1605$_greisen_trad_acct` string,
`B$1605$_greisen_trad_acct_name` string,
`B$1605$_greisen_trad_acct_card` string,
`B$1605$_greisen_main_acct_flag` string,
`C$1606$_greisen_acct_stat`  string,
`C$1606$_greisen_bank_acct`  string, 
`C$1606$_greisen_bank_acct_owner` string,
`C$1606$_greisen_fund_mode`   string,
`C$1606$_greisen_open_bank`   string,
`B$2301$_bond_acct_card`      string,
`B$2301$_bond_acct_name`      string,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:acct_id,
f:acct_stat_cd,
f:open_dt,
f:cancel_dt,
f:bk_type_cd,
f:acct_type_cd,
f:acct_flag_cd,
f:cust_type_cd,
f:bank_no,
f:currency_cd,
f:C$1601$_futs_asset_acct,
f:C$1601$_futs_bank_acct_flag,
f:C$1601$_futs_bank_open_name,
f:C$1601$_futs_bank_open_bank,
f:C$1601$_futs_settle_acct_type_cd,
f:B$1602$_futso_exchange_flag,
f:B$1602$_futso_freezestatus,
f:B$1603$_futsx_exchange_flag     ,
f:C$1001$_tpd_asset_acct,
f:C$1001$_tpd_bank_acct_type_cd,
f:C$1001$_tpd_main_acct_flag,
f:C$1001$_tpd_branch_no,
f:C$1001$_tpd_cust_acct,
f:C$1001$_tpd_holder_name,
f:C$1001$_tpd_foreign_flag,
f:C$1001$_tpd_cert_type_cd,
f:C$1001$_tpd_cert_no,
f:C$1001$_tpd_auth_no,
f:C$1001$_tpd_out_amt_upper_limit,
f:C$1001$_tpd_out_amt_lower_limit,
f:C$1001$_tpd_in_amt_upper_limit,
f:C$1001$_tpd_in_amt_lower_limit,
f:C$1001$_tpd_con_tpl,
f:C$1001$_tpd_bank_operator,
f:C$1001$_tpd_bank_appt_flag,
f:C$1001$_tpd_perm_entrust_mode,
f:C$1001$_tpd_bank_acct_juri,
f:C$1001$_tpd_bank_acct_lmt,
f:C$1001$_tpd_bank_book_account,
f:C$1001$_tpd_prov_branch_cd,
f:C$1001$_tpd_city_branch_cd,
f:C$1001$_tpd_county_branch_cd,
f:C$1001$_tpd_sub_branch_cd,
f:C$1001$_tpd_posit_str,
f:C$1001$_tpd_remark,
f:B$1002$_ord_acct_branch_no,
f:B$1002$_ord_acct_fund_card,
f:B$1002$_ord_acct_main_acct_flag,
f:B$1002$_ord_acct_risk_level,
f:B$1002$_ord_acct_risk_end_dt,
f:B$1002$_ord_acct_inter_asset_acct,
f:B$1002$_ord_acct_ust_grp,
f:B$1002$_ord_acct_room_code,
f:B$1002$_ord_acct_asset_prop,
f:B$1002$_ord_acct_fare_type_str,
f:B$1002$_ord_acct_dist_model,
f:B$1002$_ord_acct_perm_entrust_mode,
f:B$1002$_ord_acct_cust_rights,
f:B$1002$_ord_acct_cust_restriction,
f:B$1002$_ord_acct_profit_cal_mode,
f:B$1002$_ord_acct_product_flag,
f:B$1002$_ord_acct_limit_flag,
f:B$1003$_mt_mt_asset_acct,
f:B$1003$_mt_fi__quota,
f:B$1003$_mt_ma_quota,
f:B$1003$_mt_max_quota,
f:B$1003$_mt_fi_rate,
f:B$1003$_mt_fs_rate,
f:B$1003$_mt_ctr_begin_dy,
f:B$1003$_mt_ctr_end_date,
f:B$1003$_mt_branch_no,
f:B$1004$_iso_branch_no,
f:B$1004$_iso_iso_asset_acct,
f:B$1004$_iso_cust_opt_level,
f:B$1004$_iso_right_hold_quota,
f:B$1004$_iso_sh_pur_quota,
f:B$1004$_iso_total_hold_quota,
f:B$1004$_iso_lop_expire_date,
f:B$1004$_iso_td_sum_buy_quota,
f:B$1005$_bf_cft_acct,
f:B$1005$_bf_prod_ta_no,
f:B$1005$_bf_bf_acct,
f:B$1005$_bf_branch_no,
f:B$1005$_bf_cert_type_cd,
f:B$1005$_bf_cert_no,
f:B$1005$_bf_prod_acct_stat,
f:B$1005$_bf_dividend_mode,
f:B$1005$_bf_seat_no,
f:B$1005$_bf_posi_str,
f:B$1005$_bf_ta_risk_level,
f:B$1005$_bf_risk_end_dt,
f:B$1005$_bf_trans_acct,
f:B$1005$_bf_operator_name,
f:B$1005$_bf_agent_cert_type_cd,
f:B$1005$_bf_agent_cert_no,
f:B$1006$_sf_sf_asset_acct,
f:B$1006$_sf_prod_ta_no,
f:B$1006$_sf_sf_acct,
f:B$1006$_sf_branch_no,
f:B$1006$_sf_cert_type_cd,
f:B$1006$_sf_cert_no,
f:B$1006$_sf_prod_holder_stat,
f:B$1006$_sf_dividend_mode,
f:B$1006$_sf_remark,
f:B$1006$_sf_seat_no,
f:B$1006$_sf_export_dt,
f:B$1006$_sf_posi_str,
f:B$1006$_sf_prod_holder_type_cd,
f:B$1006$_sf_trans_acct,
f:B$1006$_sf_register_flag,
f:B$1006$_sf_acct_right,
f:B$1006$_sf_pay_acct,
f:B$1006$_sf_pay_type_cd,
f:B$1006$_sf_bank_cd,
f:B$1007$_ord_acct_branch_no,
f:B$1007$_ord_acct_fund_card,
f:B$1007$_ord_acct_main_acct_flag,
f:B$1007$_ord_acct_risk_level,
f:B$1007$_ord_acct_risk_end_dt,
f:B$1007$_ord_acct_inter_asset_acct,
f:B$1007$_ord_acct_ust_grp,
f:B$1007$_ord_acct_room_code,
f:B$1007$_ord_acct_asset_prop,
f:B$1007$_ord_acct_fare_type_str,
f:B$1007$_ord_acct_dist_model,
f:B$1007$_ord_acct_perm_entrust_mode,
f:B$1007$_ord_acct_cust_rights,
f:B$1007$_ord_acct_cust_restriction,
f:B$1007$_ord_acct_profit_cal_mode,
f:B$1007$_ord_acct_product_flag,
f:B$1007$_ord_acct_limit_flag,
f:B$1801$_scc_cust_group,
f:B$1801$_scc_com_clf,
f:B$1801$_scc_bk_clf,
f:B$1801$_scc_acct_type_cd,
f:B$1801$_scc_main_acct,
f:B$1401$_tg_fund_acct_no,
f:B$1401$_tg_prod_id,
f:B$1401$_tg_prod_cd,
f:B$1401$_tg_prod_sname,
f:B$1401$_tg_fund_acct_type_cd,
f:B$1401$_tg_prot_stat,
f:B$1401$_tg_prot_est_dt,
f:B$1701$_tas_seller_no,
f:B$1701$_tas_dot_no,
f:B$1701$_tas_trans_acct,
f:B$1701$_tas_open_dot_flag,
f:B$1701$_tas_acct_default_dividend_mode,
f:B$1701$_tas_c_bank_name,
f:B$1701$_tas_bank_acct,
f:B$1701$_tas_bank_acct_name,
f:B$1701$_tas_operation_dot_no,
f:B$1701$_tas_trans_acct_bak,
f:B$1701$_tas_special_acct_flag,
f:B$1701$_tas_special_acct_id,
f:B$1701$_tas_his_flag,
f:B$1702$_tas_seller_no,
f:B$1702$_tas_dot_no,
f:B$1702$_tas_trans_acct,
f:B$1702$_tas_trans_acct_stat,
f:B$1702$_tas_acct_default_dividend_mode,
f:B$1702$_tas_bank_name,
f:B$1702$_tas_bank_acct,
f:B$1702$_tas_bank_acct_name,
f:B$1702$_tas_operation_dot_no,
f:B$1702$_tas_trans_acct_bak,
f:B$1703$ds_acct_card,
f:B$1703$ds_acct_name,
f:B$1703$ds_main_acct_flag,
f:B$1099$_ord_acct_branch_no,
f:B$1099$_ord_acct_fund_card,
f:B$1099$_ord_acct_main_acct_flag,
f:B$1099$_ord_acct_risk_level,
f:B$1099$_ord_acct_risk_end_dt,
f:B$1099$_ord_acct_inter_asset_acct,
f:B$1099$_ord_acct_ust_grp,
f:B$1099$_ord_acct_room_code,
f:B$1099$_ord_acct_asset_prop,
f:B$1099$_ord_acct_fare_type_str,
f:B$1099$_ord_acct_dist_model,
f:B$1099$_ord_acct_perm_entrust_mode,
f:B$1099$_ord_acct_cust_rights,
f:B$1099$_ord_acct_cust_restriction,
f:B$1099$_ord_acct_profit_cal_mode,
f:B$1099$_ord_acct_product_flag,
f:B$1099$_ord_acct_limit_flag,
f:B$1604$_greisen_sys_date,
f:B$1604$_greisen_fund_acct,
f:B$1605$_greisen_sys_date,
f:B$1605$_greisen_trad_acct,
f:B$1605$_greisen_trad_acct_name,
f:B$1605$_greisen_trad_acct_card,
f:B$1605$_greisen_main_acct_flag,
f:C$1606$_greisen_acct_stat,
f:C$1606$_greisen_bank_acct, 
f:C$1606$_greisen_bank_acct_owner,
f:C$1606$_greisen_fund_mode,
f:C$1606$_greisen_open_bank,
f:B$2301$_bond_acct_card,
f:B$2301$_bond_acct_name,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:REL_PTY_ACC');



drop table if exists ${hiveconf:namespace}.EXT_PRJ_BIB_PMPROJ_FULL;
create external table ${hiveconf:namespace}.EXT_PRJ_BIB_PMPROJ_FULL(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`bk_type_cd` string,
`second_bk_type_cd` string,
`item_id` int,
`item_name` string,
`item_abbr` string,
`item_code` string,
`item_type` string,
`item_type_name` string,
`app_user_id` int,
`app_user_name` string,
`sposn_user_org` int,
`sposn_user_org_name` string,
`sposn_user_belt_team` int,
`sposn_user_belt_team_name` string,
`item_belt_seg_id` int,
`item_belt_seg_name` string,
`item_proj_dt` date,
`item_leader_id` int,
`item_leader_name` string,
`stock_code` string,
`conp_id` string,
`fin_advr_fee` decimal(19,2),
`has_attach1_flag` int,
`has_attach2_flag` int,
`risk_rak` string,
`item_flow_id` int,
`corp_governance` string,
`conp_name` string,
`proj_app_dt` date,
`sign_acct` string,
`sign_lawr` string,
`sign_evaluatord` string,
`contractor_type` string,
`contractor_information` string,
`chag_clause` string,
`intlacc_status` int,
`has_been_filed_flag` int,
`filed_dt` date,
`intlacc_app` int,
`oth_regr_type` string,
`other_megr_regr` string,
`scma_introduction` string,
`subj_asset_profile` string,
`trd_cntp_profile` string,
`other_no_allow` string,
`other_item_fetur` string,
`other_report_type` string,
`item_belt_team` int,
`quality_charge_person` int,
`expe_formal_proj_dt` date,
`expe_intlacc_dt` date,
`expe_rep_dt` date,
`expe_audit_dt` date,
`expe_item_co_dt` date,
`seal_flag` string,
`promiser` string,
`seal_itm_belt` string,
`seal_itm_supplementary` string,
`draw_supplementary` string,
`seal_after_snd_flag` string,
`seal_snd_address` string,
`seal_receivor` string,
`seal_receivor_tele` string,
`seal_consignee` string,
`seal_consignee_tele` string,
`approval_dt` date,
`accpt_dt` date,
`gh_dt` date,
`stock_purs_dt` date,
`stock_list_dt` date,
`keep_supervision_maty_dt` date,
`item_intlacc_dt` date,
`item_rep_dt` date,
`item_end_dt` date,
`item_finish_dt` date,
`listedis` string,
`boar` string,
`is_joint_spon_flag` int,
`is_chief_spon_flag` int,
`is_joint_underwriter_flag` int,
`expe_fb_dt` date,
`expe_premeeting_dt` date,
`expe_trialmeeting_dt` date,
`expe_item_iss_dt` date,
`rcfs_dt` date,
`stor_reg_dt` date,
`iss_scal` decimal(23,6),
`rep_stuff_has_agreement_flag` int,
`rep_stuff_has_promise_flag` int,
`last2yreve_cpgrowrate` string,
`need_frontend_check_flag` string,
`sign_agmt_flag` string,
`subscr_pr` string,
`keep_supervision_fee` decimal(23,6),
`ctr_amt` decimal(19,2),
`expe_capt_amount` decimal(19,2),
`keep_supervision` string,
`spca_maty_clause` string,
`incretrust_measure` string,
`pty_rat` string,
`iss_mode` string,
`iss_mkt` string,
`bondcode` string,
`bond_rat` string,
`coll_cptl_uses` string,
`is_joint_leadunderwriter_flag` string,
`is_leadunderwriter_flag` string,
`thip_leadunderwriter` string,
`in_excesscap_industry_flag` string,
`iss_scal_netassets_ratio` decimal(18,2),
`assetliab_ratio_after` decimal(18,2),
`guarantassets_ratio` decimal(18,2),
`rat_perspective` string,
`is_proj_prostandard_flag` string,
`is_strict_audit_flag` string,
`pty_rat_org` string,
`pty_rat_dt` date,
`debt_rat_org` string,
`debt_rat_dt` date,
`gutrer` string,
`gutrer_et` string,
`gutrer_rat` string,
`gutrer_rat_corp` string,
`gutrer_rat_dt` date,
`gutrer_guarbalance` decimal(27,10),
`gutrer_gbala_ratio` decimal(18,2),
`pawn_evaluation_value` decimal(27,10),
`pawn_evaval_ratio` decimal(18,2),
`pawn_eval_institution` string,
`vested_industry` int,
`maty_stru` decimal(18,2),
`operts_id` int,
`opre_dt` date,
`covenants_flag` string,
`exch_fb_flag` string,
`stuff_rep_status` string,
`rat_flag` string,
`approval_no` string,
`approval_check_dt` date,
`approval_validity_end_dt` date,
`first_iss_end_dt` date,
`is_trusteecreditor_agent` string,
`amor_iss_flag` string,
`amor_num` int,
`thim_bond_iss_scal` decimal(27,10),
`approval_period_structure` int,
`approval_iss_scal` int,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:bk_type_cd,
f:second_bk_type_cd,
f:item_id,
f:item_name,
f:item_abbr,
f:item_code,
f:item_type,
f:item_type_name,
f:app_user_id,
f:app_user_name,
f:sposn_user_org,
f:sposn_user_org_name,
f:sposn_user_belt_team,
f:sposn_user_belt_team_name,
f:item_belt_seg_id,
f:item_belt_seg_name,
f:item_proj_dt,
f:item_leader_id,
f:item_leader_name,
f:stock_code,
f:conp_id,
f:fin_advr_fee,
f:has_attach1_flag,
f:has_attach2_flag,
f:risk_rak,
f:item_flow_id,
f:corp_governance,
f:conp_name,
f:proj_app_dt,
f:sign_acct,
f:sign_lawr,
f:sign_evaluatord,
f:contractor_type,
f:contractor_information,
f:chag_clause,
f:intlacc_status,
f:has_been_filed_flag,
f:filed_dt,
f:intlacc_app,
f:oth_regr_type,
f:other_megr_regr,
f:scma_introduction,
f:subj_asset_profile,
f:trd_cntp_profile,
f:other_no_allow,
f:other_item_fetur,
f:other_report_type,
f:item_belt_team,
f:quality_charge_person,
f:expe_formal_proj_dt,
f:expe_intlacc_dt,
f:expe_rep_dt,
f:expe_audit_dt,
f:expe_item_co_dt,
f:seal_flag,
f:promiser,
f:seal_itm_belt,
f:seal_itm_supplementary,
f:draw_supplementary,
f:seal_after_snd_flag,
f:seal_snd_address,
f:seal_receivor,
f:seal_receivor_tele,
f:seal_consignee,
f:seal_consignee_tele,
f:approval_dt,
f:accpt_dt,
f:gh_dt,
f:stock_purs_dt,
f:stock_list_dt,
f:keep_supervision_maty_dt,
f:item_intlacc_dt,
f:item_rep_dt,
f:item_end_dt,
f:item_finish_dt,
f:listedis,
f:boar,
f:is_joint_spon_flag,
f:is_chief_spon_flag,
f:is_joint_underwriter_flag,
f:expe_fb_dt,
f:expe_premeeting_dt,
f:expe_trialmeeting_dt,
f:expe_item_iss_dt,
f:rcfs_dt,
f:stor_reg_dt,
f:iss_scal,
f:rep_stuff_has_agreement_flag,
f:rep_stuff_has_promise_flag,
f:last2yreve_cpgrowrate,
f:need_frontend_check_flag,
f:sign_agmt_flag,
f:subscr_pr,
f:keep_supervision_fee,
f:ctr_amt,
f:expe_capt_amount,
f:keep_supervision,
f:spca_maty_clause,
f:incretrust_measure,
f:pty_rat,
f:iss_mode,
f:iss_mkt,
f:bondcode,
f:bond_rat,
f:coll_cptl_uses,
f:is_joint_leadunderwriter_flag,
f:is_leadunderwriter_flag,
f:thip_leadunderwriter,
f:in_excesscap_industry_flag,
f:iss_scal_netassets_ratio,
f:assetliab_ratio_after,
f:guarantassets_ratio,
f:rat_perspective,
f:is_proj_prostandard_flag,
f:is_strict_audit_flag,
f:pty_rat_org,
f:pty_rat_dt,
f:debt_rat_org,
f:debt_rat_dt,
f:gutrer,
f:gutrer_et,
f:gutrer_rat,
f:gutrer_rat_corp,
f:gutrer_rat_dt,
f:gutrer_guarbalance,
f:gutrer_gbala_ratio,
f:pawn_evaluation_value,
f:pawn_evaval_ratio,
f:pawn_eval_institution,
f:vested_industry,
f:maty_stru,
f:operts_id,
f:opre_dt,
f:covenants_flag,
f:exch_fb_flag,
f:stuff_rep_status,
f:rat_flag,
f:approval_no,
f:approval_check_dt,
f:approval_validity_end_dt,
f:first_iss_end_dt,
f:is_trusteecreditor_agent,
f:amor_iss_flag,
f:amor_num,
f:thim_bond_iss_scal,
f:approval_period_structure,
f:approval_iss_scal,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PRJ_BIB_PMPROJ');




drop table if exists ${hiveconf:namespace}.EXT_PTY_MAIN_INFO;
create external table ${hiveconf:namespace}.EXT_PTY_MAIN_INFO(
`pbk_id` string comment '分区业务编号',
`bk_id` string comment '业务编号',
`row_lock` int comment '行级锁',
`cust_id` string comment '客户编号',
`cn_name` string comment '中文名称',
`birth_dt` date comment '出生日期',
`city` string comment '城市',
`ethnic` string comment '民族',
`nationality` string comment '国籍',
`native_place` string comment '籍贯',
`domc_lo` string comment '户籍地',
`gender` string comment '性别',
`rlg_blf` string comment '宗教信仰',
`polit_face` string comment '政治面貌',
`marr_stat_cd` string comment '婚姻状态代码',
`gb_stat_cd` string comment '生育状态代码',
`hlt_stat_cd` string comment '健康状态代码',
`stock_cd` string comment '股票代码',
`stock_name` string comment '股票名称',
`corp_type_cd` string comment '公司类型代码',
`oprt_stat_cd` string comment '经营状态代码',
`oprt_scope` string comment '经营范围',
`is_list_corp_flag` string comment '是否上市公司标志',
`is_statown_flag` string comment '是否国有标志',
`industry` string comment '行业',
`corp_tel` string comment '公司电话',
`lgl_represent` string comment '法人名称',
`lgl_cert_no` string comment '法人证件号码',
`lgl_cert_type_cd` string comment '法人证件类型代码',
`rgst_cap` string comment '注册资本',
`rgst_dt` date comment '注册日期',
`corp_email` string comment '公司电子邮箱',
`act_con_name` string comment '实际控制人名称',
`act_con_cert_no` string comment '实际控制人证件号',
`act_con_cert_type_cd` string comment '实际控制人证件类型',
`his_name` string comment '曾用名',
`org_inst_cd` string comment '组织机构代码',
`biz_license_no` string comment '营业执照',
`un_soc_cr_cd` string comment '统一社会信用代码'
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:cust_id,
f:cn_name,
f:birth_dt,
f:city,
f:ethnic,
f:nationality,
f:native_place,
f:domc_lo,
f:gender,
f:rlg_blf,
f:polit_face,
f:marr_stat_cd,
f:gb_stat_cd,
f:hlt_stat_cd,
f:stock_cd,
f:stock_name,
f:corp_type_cd,
f:oprt_stat_cd,
f:oprt_scope,
f:is_list_corp_flag,
f:is_statown_flag,
f:industry,
f:corp_tel,
f:lgl_represent,
f:lgl_cert_no,
f:lgl_cert_type_cd,
f:rgst_cap,
f:rgst_dt,
f:corp_email,
f:act_con_name,
f:act_con_cert_no,
f:act_con_cert_type_cd,
f:his_name,
f:org_inst_cd,
f:biz_license_no,
f:un_soc_cr_cd
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PTY_MAIN_INFO');




drop table if exists ${hiveconf:namespace}.EXT_PRJ_BIB_PMPROJ;
create external table ${hiveconf:namespace}.EXT_PRJ_BIB_PMPROJ(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`bk_type_cd` string,
`second_bk_type_cd` string,
`item_id` int,
`item_name` string,
`item_abbr` string,
`item_code` string,
`item_type` string,
`item_type_name` string,
`app_user_id` int,
`app_user_name` string,
`sposn_user_org` int,
`sposn_user_org_name` string,
`sposn_user_belt_team` int,
`sposn_user_belt_team_name` string,
`item_belt_seg_id` int,
`item_belt_seg_name` string,
`item_proj_dt` date,
`item_leader_id` int,
`item_leader_name` string,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:bk_type_cd,
f:second_bk_type_cd,
f:item_id,
f:item_name,
f:item_abbr,
f:item_code,
f:item_type,
f:item_type_name,
f:app_user_id,
f:app_user_name,
f:sposn_user_org,
f:sposn_user_org_name,
f:sposn_user_belt_team,
f:sposn_user_belt_team_name,
f:item_belt_seg_id,
f:item_belt_seg_name,
f:item_proj_dt,
f:item_leader_id,
f:item_leader_name,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:PRJ_BIB_PMPROJ');


drop table if exists ${hiveconf:namespace}.EXT_REL_PTY_ACC;
create external table ${hiveconf:namespace}.EXT_REL_PTY_ACC(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`acct_id` string,
`acct_stat_cd` string,
`open_dt` date,
`cancel_dt` date,
`bk_type_cd` string,
`acct_type_cd` string,
`acct_flag_cd` string,
`cust_type_cd` string,
`bank_no` string,
`currency_cd` string,
`C$1601$_futs_asset_acct` string,
`C$1601$_futs_settle_acct_type_cd` string,
`B$1602$_futso_exchange_flag` string,
`B$1602$_futso_freezestatus` string,
`B$1603$_futsx_exchange_flag     ` string,
`C$1001$_tpd_asset_acct` string,
`C$1001$_tpd_bank_acct_type_cd` string,
`C$1001$_tpd_out_amt_upper_limit` decimal(19,2),
`B$1002$_ord_acct_main_acct_flag` string,
`B$1002$_ord_acct_risk_level` int,
`B$1002$_ord_acct_risk_end_dt` date,
`B$1002$_ord_acct_asset_prop` string,
`B$1003$_mt_mt_asset_acct` string,
`B$1003$_mt_fi_rate` decimal(14,13),
`B$1003$_mt_fs_rate` decimal(14,13),
`B$1003$_mt_ctr_begin_dy` date,
`B$1003$_mt_ctr_end_date` date,
`B$1004$_iso_iso_asset_acct` string,
`B$1004$_iso_cust_opt_level` string,
`B$1004$_iso_right_hold_quota` decimal(19,2),
`B$1004$_iso_sh_pur_quota` decimal(19,2),
`B$1004$_iso_total_hold_quota` decimal(19,2),
`B$1004$_iso_lop_expire_date` date,
`B$1004$_iso_td_sum_buy_quota` decimal(19,2),
`B$1005$_bf_cft_acct` string,
`B$1005$_bf_prod_ta_no` string,
`B$1005$_bf_bf_acct` string,
`B$1005$_bf_prod_acct_stat` string,
`B$1006$_sf_sf_asset_acct` string,
`B$1006$_sf_prod_ta_no` string,
`B$1006$_sf_sf_acct` string,
`B$1006$_sf_prod_holder_stat` string,
`B$1801$_scc_bk_clf` int,
`B$1801$_scc_acct_type_cd` string,
`B$1801$_scc_main_acct` string,
`B$1401$_tg_prod_sname` string,
`B$1401$_tg_fund_acct_type_cd` string,
`B$1401$_tg_prot_stat` string,
`B$1401$_tg_prot_est_dt` date,
`B$1701$_tas_seller_no` string,
`B$1701$_tas_dot_no` string,
`B$1701$_tas_trans_acct` string,
`B$1701$_tas_c_bank_name` string,
`B$1701$_tas_bank_acct` string,
`B$1701$_tas_bank_acct_name` string,
`B$1702$_tas_seller_no` string,
`B$1702$_tas_dot_no` string,
`B$1702$_tas_trans_acct` string,
`B$1702$_tas_acct_default_dividend_mode` string,
`B$1702$_tas_bank_name` string,
`B$1702$_tas_bank_acct` string,
`B$1702$_tas_bank_acct_name` string,
`src_sys` string,
`upd_sys` string,
`last_merge_rowkey` string,
`is_merge_flag` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ('hbase.columns.mapping' = ':key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:acct_id,
f:acct_stat_cd,
f:open_dt,
f:cancel_dt,
f:bk_type_cd,
f:acct_type_cd,
f:acct_flag_cd,
f:cust_type_cd,
f:bank_no,
f:currency_cd,
f:C$1601$_futs_asset_acct,
f:C$1601$_futs_settle_acct_type_cd,
f:B$1602$_futso_exchange_flag,
f:B$1602$_futso_freezestatus,
f:B$1603$_futsx_exchange_flag     ,
f:C$1001$_tpd_asset_acct,
f:C$1001$_tpd_bank_acct_type_cd,
f:C$1001$_tpd_out_amt_upper_limit,
f:B$1002$_ord_acct_main_acct_flag,
f:B$1002$_ord_acct_risk_level,
f:B$1002$_ord_acct_risk_end_dt,
f:B$1002$_ord_acct_asset_prop,
f:B$1003$_mt_mt_asset_acct,
f:B$1003$_mt_fi_rate,
f:B$1003$_mt_fs_rate,
f:B$1003$_mt_ctr_begin_dy,
f:B$1003$_mt_ctr_end_date,
f:B$1004$_iso_iso_asset_acct,
f:B$1004$_iso_cust_opt_level,
f:B$1004$_iso_right_hold_quota,
f:B$1004$_iso_sh_pur_quota,
f:B$1004$_iso_total_hold_quota,
f:B$1004$_iso_lop_expire_date,
f:B$1004$_iso_td_sum_buy_quota,
f:B$1005$_bf_cft_acct,
f:B$1005$_bf_prod_ta_no,
f:B$1005$_bf_bf_acct,
f:B$1005$_bf_prod_acct_stat,
f:B$1006$_sf_sf_asset_acct,
f:B$1006$_sf_prod_ta_no,
f:B$1006$_sf_sf_acct,
f:B$1006$_sf_prod_holder_stat,
f:B$1801$_scc_bk_clf,
f:B$1801$_scc_acct_type_cd,
f:B$1801$_scc_main_acct,
f:B$1401$_tg_prod_sname,
f:B$1401$_tg_fund_acct_type_cd,
f:B$1401$_tg_prot_stat,
f:B$1401$_tg_prot_est_dt,
f:B$1701$_tas_seller_no,
f:B$1701$_tas_dot_no,
f:B$1701$_tas_trans_acct,
f:B$1701$_tas_c_bank_name,
f:B$1701$_tas_bank_acct,
f:B$1701$_tas_bank_acct_name,
f:B$1702$_tas_seller_no,
f:B$1702$_tas_dot_no,
f:B$1702$_tas_trans_acct,
f:B$1702$_tas_acct_default_dividend_mode,
f:B$1702$_tas_bank_name,
f:B$1702$_tas_bank_acct,
f:B$1702$_tas_bank_acct_name,
f:src_sys,
f:upd_sys,
f:last_merge_rowkey,
f:is_merge_flag,
f:data_crt_tm,
f:data_upd_tm
')
TBLPROPERTIES('hbase.table.name'='${hiveconf:namespace}:REL_PTY_ACC');

drop table if exists ${hiveconf:namespace}.EXT_PTY_STOCK;
create external table ${hiveconf:namespace}.EXT_PTY_STOCK(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`cust_type_cd` string,
`un_soc_cr_cd` string,
`stock_cd` string,
`stock_name` string,
`stock_type_cd` string,
`cn_name` string,
`src_sys` string,
`upd_sys` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp,
`is_merge_flag` string,
`last_merge_rowkey` string
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ("hbase.columns.mapping" = ":key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:un_soc_cr_cd,
f:stock_cd,
f:stock_name,
f:stock_type_cd,
f:cn_name,
f:src_sys,
f:upd_sys,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm,
f:is_merge_flag,
f:last_merge_rowkey
")
TBLPROPERTIES("hbase.table.name"="${hiveconf:namespace}:PTY_STOCK");


drop table if exists ${hiveconf:namespace}.EXT_PTY_AML_RISK;
create external table ${hiveconf:namespace}.EXT_PTY_AML_RISK(
`pbk_id` string,
`bk_id` string,
`row_lock` int,
`group_id` string,
`src_cust_id` string,
`cust_id` string,
`cust_type_cd` string,
`aml_risk_level` string,
`aml_risk_score` string,
`aml_update_time` date,
`src_sys` string,
`upd_sys` string,
`data_crt_tm` timestamp,
`data_upd_tm` timestamp,
`etl_crt_tm` timestamp,
`etl_upd_tm` timestamp,
`is_merge_flag` string,
`last_merge_rowkey` string
)
stored by 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ("hbase.columns.mapping" = ":key,
f:rowKeyValue,
f:row_lock,
f:group_id,
f:src_cust_id,
f:cust_id,
f:cust_type_cd,
f:aml_risk_level,
f:aml_risk_score,
f:aml_update_time,
f:src_sys,
f:upd_sys,
f:data_crt_tm,
f:data_upd_tm,
f:etl_crt_tm,
f:etl_upd_tm,
f:is_merge_flag,
f:last_merge_rowkey
")
TBLPROPERTIES("hbase.table.name"="${hiveconf:namespace}:PTY_AML_RISK");
